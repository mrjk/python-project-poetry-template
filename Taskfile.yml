version: '3'

# See guidelines: https://github.com/dxw/scripts-to-rule-them-all

vars:
  SRC_DIR: myprj
  TEST_DIR: tests/

#  RELEASE:
#    sh: ./build_target.sh release
#  GIT_VERSION:
#    sh: ./build_target.sh git
#  DOCKER_VERSION:
#    sh: ./build_target.sh docker
#  PKG_VERSION:
#    sh: ./build_target.sh pkg
#    #sh: python -m {{.SRC_DIR}}.version
#

  # GIT_TAG:
  #   sh: git describe --tags 2>/dev/null || echo devel
  # GIT_BRANCH:
  #   sh: git rev-parse --abbrev-ref HEAD
  # PAASIFY_VERSION:
  #   sh: poetry version -s

  # #PAASIFY_RELEASE=$(poetry version -s)
  # PAASIFY_RELEASE: latest

includes:
  doc:
    taskfile: ./docs/Taskfile.yml
    dir: ./docs

  dev:
    taskfile: ./scripts/Taskfile.yml
    #dir: .
  docker:
    taskfile: ./docker/Taskfile.yml

# See: https://github.blog/2015-06-30-scripts-to-rule-them-all/


tasks:

  # Generic helpers
  # -----------------

  default:
    desc: Show all commands
    cmds:
      - task --list-all

  #bootstrap:
  #  desc: Bootstrap all
  #  cmds:
  #    - for c in $(task -l | grep -Eo '[^ ]+_bootstrap'); do task $c ; done


  # Project helpers
  # -----------------

  bootstrap:
    desc: bootstrap environment
    cmds:
      - pip install --upgrade pip
      - pip install --upgrade poetry
      - poetry install --no-root


  setup:
    desc: setup environment
    cmds:
      - git flow init -d --tag v
      - poetry install

  release:
    desc: Bump code stable version, generate changelog, create a tag
    cmds:
      - bash scripts/release.sh {{.CLI_ARGS}}

  # Pypi Workflow
  # ---------------
  build:
    desc: Create a python package
    cmds:
      - poetry build

  publish:
    desc: Create a python package
    interactive: true
    deps:
      - pkg_build
    cmds:
      - poetry publish

  clean:
    desc: Clean generated packages
    cmds:
      - rm -rf dist/
    status:
      - test ! -d dist/

#
#  # Project Workflow
#  # ---------------
#  run_qa:
#    desc: Run short test suites
#    deps:
#    - run_black
#    - report_linting
#
#  run_test:
#    desc: Run full test suites
#    deps:
#    - run_black
#    - run_test
#    - report_coverage
#    - report_linting
#
#
#
#  # Top level Workflow
#  # ---------------
#
#  # serve_doc:
#  #   desc: Serve locally documentation site
#  #   deps:
#  #     - doc:serve_doc
#
#  clean:
#    desc: Clean all artifacts
#    deps:
#      - pkg_clean
#      - docker_clean
#
