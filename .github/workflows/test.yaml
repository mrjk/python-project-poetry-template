name: Test workflow

on:
  workflow_dispatch:
  push:
    # branches-ignore:
    #   - "*-alpha"
    #   - "*-beta"
    #   - "*-rc"
  # pull_request:
  #   branches:
  #     - main
  #     - develop

env:
  VIRTUAL_ENV: ~/venv

jobs:

  install:
    uses: ./.github/workflows/_install.yaml
    with:
      python_version: ${{ matrix.python_version }}
      poetry_version: ${{ matrix.poetry_version }}
    secrets:
      access_token: "${{ secrets.ACCESS_TOKEN }}"

    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.9']
        poetry_version: ['1.2.1']


  test:
    needs: install
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.9']
        poetry_version: ['1.2.1']

    steps:

      # Load project
      # ---------------------
      - name: Load cached python environment
        id: cached-env-install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: python_env--${{ runner.os }}--${{matrix.python_version}}--${{matrix.poetry_version}}

      - name: Fetch source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: Load cached venv
        id: cached-project-deps
        uses: actions/cache@v3
        with:
          path: ~/.venv
          key: venv--${{ runner.os }}--${{matrix.python_version}}--${{matrix.poetry_version}}--${{ hashFiles('**/poetry.lock') }}



      - name: Add to PATH
        run: |
          set -x
          path1=~/.local/bin
          $path1/poetry env info --path
          path2="$($path1/poetry env info --path)/bin"
          echo "$path1" >> $GITHUB_PATH
          echo "$path2" >> $GITHUB_PATH

      # Run tests
      # ---------------------
      - name: Run tests
        run: |
          poetry run myprj
          myprj || true

#      # Run tests
#      # ---------------------
#      - name: Run black
#        run: |
#          source ~/.venv/bin/activate
#          black --check --verbose paasify
#
#      - name: Run unit tests
#        run: |
#          set -x
#          source ~/.venv/bin/activate
#          env | sort
#          cd $GITHUB_WORKSPACE
#          ls -ahl ~/.venv/bin/
#          python -m site
#          python -m pytest
#
#          pytest tests
#
      # echo "PWD = ${PWD//\//#}"
      # ls -ahl "$HOME"
      # ls -ahl /home/runner/work/paasify/paasify || true
      # env | sort

      # echo ===============
      # cd /home/runner/work/paasify/paasify
